name: terraform deploy

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: setup python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install Terraform
      uses: little-core-labs/install-terraform@v1.0.0
      with:
        version: 0.12.24
        
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics:  

    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install virtualenv
        virtualenv -p python3.7 venv
        . ./venv/bin/activate
        mkdir python
        pip3 install -r requirements.txt -t ./python/
        mv meta/* ./python/
        zip -r layer.zip ./python > /dev/null

    - name: plan it
      run: |
        export branch=${GITHUB_REF##*/}
        echo $branch 
        export AWS_ACCESS_KEY_ID="${{ secrets.access_key }}"
        export AWS_SECRET_ACCESS_KEY="${{ secrets.secret_key }}"
        export AWS_DEFAULT_REGION="us-east-1"
        terraform init -no-color -backend-config="bucket=${{ secrets.bucket_location }}" -backend-config="key=${{ secrets.state_location }}"
        
        
        

    # - name: plan it
    #   env:
    #     AWS_ACCESS_KEY_ID: {{ secrets.access_key }}
    #     AWS_SECRET_ACCESS_KEY: {{ secrets.secret_key }}

    #   run: |
    #     echo $branch 
    #     terraform init -no-color --backend-config="bucket=${{ secrets.bucket_location }}" -backend-config="key=${{ secrets.state_location}}"
        
        
# ${GITHUB_REF##*/}
# terraform apply -no-color -auto-approve -var
